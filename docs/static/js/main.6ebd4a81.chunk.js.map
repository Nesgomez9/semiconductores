{"version":3,"sources":["components/SidebarData.js","components/SubMenu.js","components/Sidebar.js","screens/product/Product.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","icon","iconClosed","iconOpened","SidebarLink","styled","Link","SidebarLabel","span","DropdownLink","SubMenu","item","useState","subnav","setSubnav","to","onClick","subNav","map","index","Nav","div","NavIcon","SidebarNav","nav","sidebar","SidebarWrap","Title","h5","Sidebar","setSidebar","Provider","value","color","Product","q","k","mo","e0","type","voltage","temperature","area","Ni","n","eg","mn","mp","Ac","er","Dp","Dn","Lp","Ln","V0","diodoInformation","setDiodoInformation","Nd","Up","Tp","lN","nTypeInformation","setNTypeInformation","Na","Un","Tn","lP","pTypeInformation","setPTypeInformation","points","setPoints","pointsTwo","setPointsTwo","setVtFinal","loading","setLoading","labels","datasets","label","data","fill","backgroundColor","borderColor","dataThirdGraph","setDataThirdGraph","dataSecondGraph","setDataSecondGraph","dataFirstGraph","setDataFirstGraph","makeLabels","a","array","i","push","Number","toFixed","makeLabelsTwo","onChange","object","name","shockleyEquation","values","tempUp","tempUn","Vt","tmpDp","tmpDn","tmpLp","Math","sqrt","tmpLn","log","Wn","Wp","forEach","resXn","resXp","resWn","resWp","dataGraph","Is","length","res","tanh","pow","exp","console","V0Equation","graph2","point","capacitanceDepletion","callEquations","onSubmit","e","preventDefault","useEffect","Container","fluid","Row","className","Form","Group","Label","Control","required","target","as","min","max","size","Button","options","display","text","fontSize","legend","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ebd4a81.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as RiIcons from \"react-icons/ri\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Productos\",\r\n    path: \"/products\",\r\n    icon: <RiIcons.RiShoppingBasket2Fill />,\r\n    iconClosed: <RiIcons.RiArrowDownSFill />,\r\n    iconOpened: <RiIcons.RiArrowUpSFill />,\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SidebarLink = styled(Link)`\r\n  display: flex;\r\n  color: #e1e9fc;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  list-style: none;\r\n  height: 60px;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  &:hover {\r\n    background: #252831;\r\n    border-left: 4px solid #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SidebarLabel = styled.span`\r\n  margin-left: 16px;\r\n`;\r\n\r\nconst DropdownLink = styled(Link)`\r\n  background: #414757;\r\n  height: 60px;\r\n  padding-left: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #f5f5f5;\r\n  font-size: 18px;\r\n  &:hover {\r\n    background: #632ce4;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SubMenu = ({ item }) => {\r\n  const [subnav, setSubnav] = useState(false);\r\n\r\n  const showSubnav = () => setSubnav(!subnav);\r\n\r\n  return (\r\n    <>\r\n      <SidebarLink to={item.path} onClick={item.subNav && showSubnav}>\r\n        <div>\r\n          {item.icon}\r\n          <SidebarLabel>{item.title}</SidebarLabel>\r\n        </div>\r\n        <div>\r\n          {item.subNav && subnav\r\n            ? item.iconOpened\r\n            : item.subNav\r\n            ? item.iconClosed\r\n            : null}\r\n        </div>\r\n      </SidebarLink>\r\n      {subnav &&\r\n        item.subNav.map((item, index) => {\r\n          return (\r\n            <DropdownLink to={item.path} key={index}>\r\n              {item.icon}\r\n              <SidebarLabel>{item.title}</SidebarLabel>\r\n            </DropdownLink>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { SidebarData } from './SidebarData';\r\nimport SubMenu from './SubMenu';\r\nimport { IconContext } from 'react-icons/lib';\r\n\r\nconst Nav = styled.div`\r\n  background: #15171c;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavIcon = styled(Link)`\r\n  margin-left: 2rem;\r\n  font-size: 2rem;\r\n  height: 80px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n  background: #15171c;\r\n  width: 250px;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n  transition: 500ms;\r\n  z-index: 10;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h5`\r\n  color: white;\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const [sidebar, setSidebar] = useState(false);\r\n\r\n  const showSidebar = () => setSidebar(!sidebar);\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: '#fff' }}>\r\n        <Nav>\r\n          <NavIcon to=\"#\"></NavIcon>\r\n          <Title>Trabajo final Semiconductores Diodo PN</Title>\r\n        </Nav>\r\n        <SidebarNav sidebar={sidebar}>\r\n          <SidebarWrap>\r\n            <NavIcon to=\"#\">\r\n              <AiIcons.AiOutlineClose onClick={showSidebar} />\r\n            </NavIcon>\r\n            {SidebarData.map((item, index) => {\r\n              return <SubMenu item={item} key={index} />;\r\n            })}\r\n          </SidebarWrap>\r\n        </SidebarNav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Container, Row, Form, Button } from 'react-bootstrap';\r\nimport RangeSlider from 'react-bootstrap-range-slider';\r\nimport './Product.scss';\r\nconst Product = () => {\r\n  const q = 0.0000000000000000001602; /* 10^-19*/\r\n  const k = 0.0000000000000000000000138; /* 10^-23*/\r\n  const k1 = 0.0000861;\r\n  const h = 0.0000000000000041356; /* 10^-15 */\r\n  const mo = 0.00000000000000000000000000000091; /* 10^-31 */\r\n  const e0 = 0.00000000000008854; /* 10^-14 */\r\n\r\n  const [diodoInformation, setDiodoInformation] = useState({\r\n    type: 'Silicio',\r\n    voltage: 0,\r\n    temperature: 0,\r\n    area: 0,\r\n    Ni: 15400000000,\r\n    n: 2,\r\n    eg: 1.1,\r\n    mn: 1.18 * mo,\r\n    mp: 0.81 * mo,\r\n    Ac: 0,\r\n    er: 12,\r\n    Dp: 0,\r\n    Dn: 0,\r\n    Lp: 0,\r\n    Ln: 0,\r\n    V0: 0,\r\n  });\r\n  const [nTypeInformation, setNTypeInformation] = useState({\r\n    Nd: 100000000000000,\r\n    Up: 0,\r\n    Tp: 0,\r\n    lN: 0,\r\n  });\r\n  const [pTypeInformation, setPTypeInformation] = useState({\r\n    Na: 100000000000000,\r\n    Un: 0,\r\n    Tn: 0,\r\n    lP: 0,\r\n  });\r\n  const [points, setPoints] = useState([]);\r\n  const [pointsTwo, setPointsTwo] = useState([]);\r\n  const [pointsThree, setPointsThree] = useState([]);\r\n  const [VtFinal, setVtFinal] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataThirdGraph, setDataThirdGraph] = useState({\r\n    labels: [\r\n      0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4,\r\n      1.5, 1.6, 1.7, 1.8, 1.9, 2,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: 'Capacitancia asociada',\r\n        data: [],\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  });\r\n  const [dataSecondGraph, setDataSecondGraph] = useState({\r\n    labels: [\r\n      0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4,\r\n      1.5, 1.6, 1.7, 1.8, 1.9, 2,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: 'Tensión termica',\r\n        data: [],\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  });\r\n  const [dataFirstGraph, setDataFirstGraph] = useState({\r\n    labels: [\r\n      0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4,\r\n      1.5, 1.6, 1.7, 1.8, 1.9, 2,\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: 'Corriente',\r\n        data: [],\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  });\r\n  const makeLabels = async () => {\r\n    const array = [];\r\n    for (let i = -1.3; i < diodoInformation.voltage; i += 0.01) {\r\n      array.push(Number(i.toFixed(2)));\r\n    }\r\n    await setPoints(array);\r\n    return array;\r\n  };\r\n  const makeLabelsTwo = async () => {\r\n    const array = [];\r\n    for (let i = 10; i < 450; i += 5) {\r\n      array.push(i);\r\n    }\r\n    await setPointsTwo(array);\r\n    return array;\r\n  };\r\n  const onChange = async (object, name, value) => {\r\n    if (object === 'diodoInformation') {\r\n      if (value === 'Silicio') {\r\n        setDiodoInformation({\r\n          ...diodoInformation,\r\n          n: 2,\r\n          eg: 1.1,\r\n          mn: 1.18 * mo,\r\n          mp: 0.81 * mo,\r\n          er: 12,\r\n          Ni: 15400000000,\r\n          [name]: value,\r\n        });\r\n      } else if (value === 'Germanio') {\r\n        setDiodoInformation({\r\n          ...diodoInformation,\r\n          n: 1,\r\n          eg: 0.68,\r\n          mn: 0.55 * mo,\r\n          mp: 0.36 * mo,\r\n          er: 15.7,\r\n          Ni: 24000000000000,\r\n          [name]: value,\r\n        });\r\n      } else {\r\n        setDiodoInformation({ ...diodoInformation, [name]: Number(value) });\r\n      }\r\n    } else if (object === 'nTypeInformation') {\r\n      if (name === 'Nd' && value < 100000000000000) {\r\n        await setNTypeInformation({\r\n          ...nTypeInformation,\r\n          [name]: 100000000000000,\r\n        });\r\n      } else if (name === 'Nd' && value > 10000000000000000000) {\r\n        await setNTypeInformation({\r\n          ...nTypeInformation,\r\n          [name]: 10000000000000000000,\r\n        });\r\n      } else {\r\n        await setNTypeInformation({\r\n          ...nTypeInformation,\r\n          [name]: Number(value),\r\n        });\r\n      }\r\n    } else {\r\n      if (name === 'Na' && value < 100000000000000) {\r\n        await setPTypeInformation({\r\n          ...pTypeInformation,\r\n          [name]: 100000000000000,\r\n        });\r\n      } else if (name === 'Na' && value > 10000000000000000000) {\r\n        await setPTypeInformation({\r\n          ...pTypeInformation,\r\n          [name]: 10000000000000000000,\r\n        });\r\n      } else {\r\n        await setPTypeInformation({\r\n          ...pTypeInformation,\r\n          [name]: Number(value),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const shockleyEquation = (values) => {\r\n    let tempUp = 0;\r\n    let tempUn = 0;\r\n    if (diodoInformation.type === 'Silicio') {\r\n      if (\r\n        nTypeInformation.Nd >= 100000000000000 &&\r\n        nTypeInformation.Nd < 10000000000000000\r\n      ) {\r\n        tempUp = 223.87211;\r\n      } else if (\r\n        nTypeInformation.Nd >= 10000000000000000 &&\r\n        nTypeInformation.Nd < 31622776601683790\r\n      ) {\r\n        tempUp = 199.52623;\r\n      } else if (\r\n        nTypeInformation.Nd >= 31622776601683790 &&\r\n        nTypeInformation.Nd < 100000000000000000\r\n      ) {\r\n        tempUp = 177.82794;\r\n      } else if (\r\n        nTypeInformation.Nd >= 100000000000000000 &&\r\n        nTypeInformation.Nd < 316227766016837940\r\n      ) {\r\n        tempUp = 151.35612;\r\n      } else if (\r\n        nTypeInformation.Nd >= 316227766016837940 &&\r\n        nTypeInformation.Nd < 1000000000000000000\r\n      ) {\r\n        tempUp = 120.22644;\r\n      } else if (\r\n        nTypeInformation.Nd >= 1000000000000000000 &&\r\n        nTypeInformation.Nd < 10000000000000000000\r\n      ) {\r\n        tempUp = 100;\r\n      }\r\n    } else if (diodoInformation.type === 'Germanio') {\r\n      if (\r\n        nTypeInformation.Nd >= 100000000000000 &&\r\n        nTypeInformation.Nd < 1000000000000000\r\n      ) {\r\n        tempUp = 1230.2687;\r\n      } else if (\r\n        nTypeInformation.Nd >= 1000000000000000 &&\r\n        nTypeInformation.Nd < 3162277660168379\r\n      ) {\r\n        tempUp = 1174.8975;\r\n      } else if (\r\n        nTypeInformation.Nd >= 3162277660168379 &&\r\n        nTypeInformation.Nd < 10000000000000000\r\n      ) {\r\n        tempUp = 1122.0184;\r\n      } else if (\r\n        nTypeInformation.Nd >= 10000000000000000 &&\r\n        nTypeInformation.Nd < 31622776601683790\r\n      ) {\r\n        tempUp = 1047.1285;\r\n      } else if (\r\n        nTypeInformation.Nd >= 31622776601683790 &&\r\n        nTypeInformation.Nd < 100000000000000000\r\n      ) {\r\n        tempUp = 794.3282;\r\n      } else if (\r\n        nTypeInformation.Nd >= 100000000000000000 &&\r\n        nTypeInformation.Nd < 316227766016837950\r\n      ) {\r\n        tempUp = 501.1872;\r\n      } else if (\r\n        nTypeInformation.Nd >= 316227766016837950 &&\r\n        nTypeInformation.Nd < 1000000000000000000\r\n      ) {\r\n        tempUp = 251.1886;\r\n      } else if (\r\n        nTypeInformation.Nd >= 1000000000000000000 &&\r\n        nTypeInformation.Nd < 3162277660168379400\r\n      ) {\r\n        tempUp = 141.2537;\r\n      } else {\r\n        tempUp = 114.8153;\r\n      }\r\n    }\r\n    /* Un */\r\n    if (diodoInformation.type === 'Silicio') {\r\n      if (\r\n        pTypeInformation.Na >= 100000000000000 &&\r\n        pTypeInformation.Na < 10000000000000000\r\n      ) {\r\n        tempUn = 1174.8975;\r\n      } else if (\r\n        pTypeInformation.Na >= 10000000000000000 &&\r\n        pTypeInformation.Na < 31622776601683790\r\n      ) {\r\n        tempUn = 1047.1285;\r\n      } else if (\r\n        pTypeInformation.Na >= 31622776601683790 &&\r\n        pTypeInformation.Na < 100000000000000000\r\n      ) {\r\n        tempUn = 1000;\r\n      } else if (\r\n        pTypeInformation.Na >= 100000000000000000 &&\r\n        pTypeInformation.Na < 316227766016837940\r\n      ) {\r\n        tempUn = 501.1872;\r\n      } else if (\r\n        pTypeInformation.Na >= 316227766016837940 &&\r\n        pTypeInformation.Na < 1000000000000000000\r\n      ) {\r\n        tempUn = 199.5262;\r\n      } else if (\r\n        pTypeInformation.Na >= 1000000000000000000 &&\r\n        pTypeInformation.Na < 3162277660168379400\r\n      ) {\r\n        tempUn = 125.8925;\r\n      } else {\r\n        tempUn = 104.7128;\r\n      }\r\n    } else if (diodoInformation.type === 'Germanio') {\r\n      if (\r\n        pTypeInformation.Na >= 100000000000000 &&\r\n        pTypeInformation.Na < 1000000000000000\r\n      ) {\r\n        tempUn = 1995.2623;\r\n      } else if (\r\n        pTypeInformation.Na >= 1000000000000000 &&\r\n        pTypeInformation.Na < 3162277660168379\r\n      ) {\r\n        tempUn = 1778.2794;\r\n      } else if (\r\n        pTypeInformation.Na >= 3162277660168379 &&\r\n        pTypeInformation.Na < 10000000000000000\r\n      ) {\r\n        tempUn = 1659.5869;\r\n      } else if (\r\n        pTypeInformation.Na >= 10000000000000000 &&\r\n        pTypeInformation.Na < 31622776601683790\r\n      ) {\r\n        tempUn = 1548.8166;\r\n      } else if (\r\n        pTypeInformation.Na >= 31622776601683790 &&\r\n        pTypeInformation.Na < 100000000000000000\r\n      ) {\r\n        tempUn = 1412.5375;\r\n      } else if (\r\n        pTypeInformation.Na >= 100000000000000000 &&\r\n        pTypeInformation.Na < 316227766016837950\r\n      ) {\r\n        tempUn = 1258.9254;\r\n      } else if (\r\n        pTypeInformation.Na >= 316227766016837950 &&\r\n        pTypeInformation.Na < 1000000000000000000\r\n      ) {\r\n        tempUn = 1202.2644;\r\n      } else if (\r\n        pTypeInformation.Na >= 1000000000000000000 &&\r\n        pTypeInformation.Na < 3162277660168379400\r\n      ) {\r\n        tempUn = 1122.0184;\r\n      } else {\r\n        tempUn = 1023.2929;\r\n      }\r\n    }\r\n\r\n    let Vt = (k * Number(diodoInformation.temperature)) / q;\r\n\r\n    const tmpDp = tempUp * Vt;\r\n    const tmpDn = tempUn * Vt;\r\n\r\n    const tmpLp = Math.sqrt(tmpDp * nTypeInformation.Tp);\r\n    const tmpLn = Math.sqrt(tmpDn * pTypeInformation.Tn);\r\n    const V0 =\r\n      Vt *\r\n      Math.log(\r\n        (nTypeInformation.Nd * pTypeInformation.Na) / diodoInformation.Ni\r\n      );\r\n    let Wn = [];\r\n    let Wp = [];\r\n    values.forEach((value) => {\r\n      const resXn = Math.sqrt(\r\n        ((2 * e0 * diodoInformation.er) / q) *\r\n          (pTypeInformation.Na /\r\n            (nTypeInformation.Nd *\r\n              (pTypeInformation.Na + nTypeInformation.Nd))) *\r\n          (V0 - value)\r\n      );\r\n\r\n      const resXp = Math.sqrt(\r\n        ((2 * e0 * diodoInformation.er) / q) *\r\n          (nTypeInformation.Nd /\r\n            (pTypeInformation.Na *\r\n              (pTypeInformation.Na + nTypeInformation.Nd))) *\r\n          (V0 - value)\r\n      );\r\n\r\n      const resWn = nTypeInformation.lN - resXn;\r\n      const resWp = pTypeInformation.lP - resXp;\r\n      Wn.push(resWn);\r\n      Wp.push(resWp);\r\n    });\r\n    let dataGraph = [];\r\n    let Is = [];\r\n    for (let i = 0; i < Wn.length; i++) {\r\n      let res =\r\n        q *\r\n        diodoInformation.area *\r\n        ((tmpDp / tmpLp) *\r\n          (1 / Math.tanh(Wn[i] / tmpLp)) *\r\n          (1 / nTypeInformation.Nd) +\r\n          (tmpDn / tmpLn) *\r\n            (1 / Math.tanh(Wp[i] / tmpLn)) *\r\n            (1 / pTypeInformation.Na)) *\r\n        Math.pow(diodoInformation.Ni, 2);\r\n      Is.push(res);\r\n    }\r\n    values.forEach((value, index) => {\r\n      let res = Is[index] * (Math.exp(value / (diodoInformation.n * Vt)) - 1);\r\n      dataGraph.push(res);\r\n    });\r\n    console.log(Is, dataGraph);\r\n    setDiodoInformation({\r\n      ...diodoInformation,\r\n      Lp: tmpLp,\r\n      Ln: tmpLn,\r\n      Dp: tmpDp,\r\n      Dn: tmpDn,\r\n      V0: V0,\r\n    });\r\n    setVtFinal(Vt);\r\n    setNTypeInformation({ ...nTypeInformation, Up: tempUp });\r\n    setPTypeInformation({ ...pTypeInformation, Un: tempUn });\r\n\r\n    setDataFirstGraph({\r\n      labels: points,\r\n      datasets: [\r\n        {\r\n          label: 'Corriente',\r\n          data: dataGraph,\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 99, 132)',\r\n          borderColor: 'rgba(255, 99, 132, 0.2)',\r\n        },\r\n      ],\r\n    });\r\n    dataFirstGraph.datasets[0].data = dataGraph;\r\n  };\r\n  const V0Equation = () => {\r\n    let graph2 = [];\r\n    pointsTwo.forEach((point) => {\r\n      let Vt = (k * Number(point)) / q;\r\n      graph2.push(Vt);\r\n    });\r\n    setDataSecondGraph({\r\n      labels: pointsTwo,\r\n      datasets: [\r\n        {\r\n          label: 'Tensión termica',\r\n          data: graph2,\r\n          fill: false,\r\n          backgroundColor: 'rgb(104, 227, 135)',\r\n          borderColor: 'rgba(255, 235,150, 0.2)',\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  const capacitanceDepletion = (values) => {\r\n    let Vt = (k * Number(diodoInformation.temperature)) / q;\r\n    const V0 =\r\n      Vt *\r\n      Math.log(\r\n        (nTypeInformation.Nd * pTypeInformation.Na) / diodoInformation.Ni\r\n      );\r\n    let data = [];\r\n    values.forEach((value) => {\r\n      let res =\r\n        (diodoInformation.area *\r\n          Math.sqrt(\r\n            (q *\r\n              e0 *\r\n              diodoInformation.er *\r\n              nTypeInformation.Nd *\r\n              pTypeInformation.Na) /\r\n              (2 * (nTypeInformation.Nd + pTypeInformation.Na))\r\n          )) /\r\n        Math.sqrt(V0 - value);\r\n      data.push(res);\r\n    });\r\n    setDataThirdGraph({\r\n      labels: values,\r\n      datasets: [\r\n        {\r\n          label: 'Capacitancia asociada',\r\n          data: data,\r\n          fill: false,\r\n          backgroundColor: 'rgb(46, 158, 209)',\r\n          borderColor: 'rgba(255, 235,150, 0.2)',\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  const callEquations = async () => {\r\n    setLoading(true);\r\n    const values = await makeLabels();\r\n    await shockleyEquation(values);\r\n    capacitanceDepletion(values);\r\n    V0Equation();\r\n    setLoading(false);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await callEquations();\r\n  };\r\n  useEffect(() => {\r\n    makeLabels();\r\n  }, [diodoInformation.voltage]);\r\n  useEffect(() => {\r\n    makeLabelsTwo();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <div className=\"offset-1 col-5 max-height \">\r\n            <Form onSubmit={onSubmit} className=\"mb-4\">\r\n              <Row>\r\n                <div className=\"col-6\">\r\n                  <Form.Group className=\"mt-4\">\r\n                    <Form.Label> Temperatura (K)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      required\r\n                      value={diodoInformation.temperature}\r\n                      onChange={(e) => {\r\n                        onChange(\r\n                          'diodoInformation',\r\n                          'temperature',\r\n                          e.target.value\r\n                        );\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mt-4\">\r\n                    <Form.Label> Area (cm^2)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      required\r\n                      value={diodoInformation.area}\r\n                      onChange={(e) => {\r\n                        onChange('diodoInformation', 'area', e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-6 \">\r\n                  <Form.Group className=\"mt-4\">\r\n                    <Form.Label> Tipo de semiconductor</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={diodoInformation.type}\r\n                      onChange={(e) => {\r\n                        onChange('diodoInformation', 'type', e.target.value);\r\n                      }}\r\n                    >\r\n                      <option>Silicio</option>\r\n                      <option>Germanio</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mt-4\">\r\n                    <Form.Label> Voltaje (V)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={diodoInformation.voltage}\r\n                      onChange={(e) => {\r\n                        onChange('diodoInformation', 'voltage', e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </Row>\r\n              <h4>Región tipo N</h4>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <Form.Label> Nd (cm^-3)</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={nTypeInformation.Nd}\r\n                    onChange={(e) => {\r\n                      onChange('nTypeInformation', 'Nd', e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6 mt-4\">\r\n                  <RangeSlider\r\n                    value={nTypeInformation.Nd}\r\n                    min={100000000000000}\r\n                    max={10000000000000000000}\r\n                    onChange={(e) => {\r\n                      onChange('nTypeInformation', 'Nd', e.target.value);\r\n                    }}\r\n                    size=\"lg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Row>\r\n                <div className=\"col-6\">\r\n                  <Form.Group className=\"mt-2\">\r\n                    <Form.Label> ln (um)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={nTypeInformation.lN}\r\n                      onChange={(e) => {\r\n                        onChange('nTypeInformation', 'lN', e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <Form.Group className=\"mt-2\">\r\n                    <Form.Label> Tp (s)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={nTypeInformation.Tp}\r\n                      onChange={(e) => {\r\n                        onChange('nTypeInformation', 'Tp', e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </Row>\r\n              <h4>Region tipo P</h4>\r\n              <hr />\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <Form.Label> Na (cm^-3)</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={pTypeInformation.Na}\r\n                    onChange={(e) => {\r\n                      onChange('pTypeInformation', 'Na', e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6 mt-4\">\r\n                  <RangeSlider\r\n                    value={pTypeInformation.Na}\r\n                    min={100000000000000}\r\n                    max={10000000000000000000}\r\n                    onChange={(e) => {\r\n                      onChange('pTypeInformation', 'Na', e.target.value);\r\n                    }}\r\n                    size=\"lg\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Row>\r\n                <div className=\"col-6\">\r\n                  <Form.Group className=\"mt-2\">\r\n                    <Form.Label> lp (um)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={pTypeInformation.lP}\r\n                      onChange={(e) => {\r\n                        onChange('pTypeInformation', 'lP', e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <Form.Group className=\"mt-2\">\r\n                    <Form.Label> Tn (s)</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={pTypeInformation.Tn}\r\n                      onChange={(e) => {\r\n                        onChange('pTypeInformation', 'Tn', e.target.value);\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </Row>\r\n\r\n              <div className=\" right\">\r\n                <Button className=\"mt-3 mb-3 mr-2\" type=\"submit\">\r\n                  Graficar\r\n                </Button>\r\n              </div>\r\n              <h4>Resultados</h4>\r\n              <hr />\r\n              {loading ? (\r\n                <span>Cargando...</span>\r\n              ) : (\r\n                <div>\r\n                  <Row>\r\n                    <div className=\"col-6\">Up: {nTypeInformation.Up}</div>\r\n                    <div className=\"col-6\">Un: {pTypeInformation.Un}</div>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"col-6\">Dp: {diodoInformation.Dp}</div>\r\n                    <div className=\"col-6\">Dn: {diodoInformation.Dn}</div>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"col-6\">Lp: {diodoInformation.Lp}</div>\r\n                    <div className=\"col-6\">Ln: {diodoInformation.Ln}</div>\r\n                  </Row>\r\n                  <Row>\r\n                    <div className=\"col-6\">V0: {diodoInformation.V0}</div>\r\n                    <div className=\"col-6\">Ni: {diodoInformation.Ni}</div>\r\n                  </Row>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          </div>\r\n\r\n          <div className=\"col-5 max-height\">\r\n            <div>\r\n              {loading ? null : (\r\n                <div>\r\n                  <Line\r\n                    data={dataFirstGraph}\r\n                    options={{\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Average Rainfall per month',\r\n                        fontSize: 20,\r\n                      },\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'right',\r\n                      },\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    data={dataSecondGraph}\r\n                    options={{\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Average Rainfall per month',\r\n                        fontSize: 20,\r\n                      },\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'right',\r\n                      },\r\n                    }}\r\n                  />\r\n                  <Line\r\n                    data={dataThirdGraph}\r\n                    options={{\r\n                      title: {\r\n                        display: true,\r\n                        text: 'Average Rainfall per month',\r\n                        fontSize: 20,\r\n                      },\r\n                      legend: {\r\n                        display: true,\r\n                        position: 'right',\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import './App.scss';\nimport Sidebar from './components/Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Product from './screens/product/Product';\n\nfunction App() {\n  /* aad */\n  return (\n    <Router>\n      <Sidebar />\n      <Product />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}